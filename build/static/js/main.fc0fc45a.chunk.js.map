{"version":3,"sources":["hooks/useTypedSelector.ts","redux/context.ts","components/dragField.tsx","components/jsonDragReader.tsx","redux/action.ts","components/listItem.tsx","components/uniqueList.tsx","App.tsx","redux/reducer.ts","redux/store.ts","index.tsx"],"names":["useTypedSelector","useSelector","DragStatus","React","createContext","dragField","setDragField","ErrorStatus","error","showHideError","DragField","dragOverHandler","dragDropHandler","effect","onDragOver","e","onDrop","className","JsonDragReader","useContext","useState","loader","setLoad","value","userList","Set","dispatch","useDispatch","dfs","arr","i","Array","isArray","add","user","replies","preventDefault","file","dataTransfer","files","type","length","reader","FileReader","readAsText","onload","result","jsn","JSON","parse","undefined","size","payload","list","name","onerror","ListItem","item","deleteItem","href","onClick","deleteItemHandler","UniqueList","items","caption","forEach","key","push","App","state","nameList","fileName","setEffect","shadowOn","onDragStart","shadowOff","initialState","rootReducer","combineReducers","actions","sort","delete","store","createStore","Main","setError","StrictMode","Provider","err","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAoDC,ICO3DC,EAAaC,IAAMC,cAAsC,CAC3DC,WAAW,EACXC,aAAc,eAEZC,EAAcJ,IAAMC,cAAoC,CAC1DI,MAAO,GACPC,cAAe,eAEJP,I,OCEAQ,MAZf,YAAsF,IAAlEC,EAAiE,EAAjEA,gBAAiBC,EAAgD,EAAhDA,gBAAgD,IAA/BC,cAA+B,MAAxB,GAAwB,EACnF,OACE,qBACEC,WAAY,SAACC,GAAD,OAAuCJ,EAAgBI,IACnEC,OAAQ,SAACD,GAAD,OAAuCH,EAAgBG,IAC/DE,UAAS,oBAAeJ,GAH1B,SAKE,6CCsESK,MA9Ef,WACE,IAAQT,EAAiBU,qBAAWZ,GAA5BE,cACR,EAA2BW,oBAAkB,GAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAQJ,qBAAWjB,GACrBsB,EAAW,IAAIC,IACbC,EAAWC,cACXC,EAAM,SAANA,EAAOC,GACX,GAAIA,EAQJ,IAAK,IAAIC,KAPJC,MAAMC,QAAQH,KACb,SAAUA,GACdL,EAASS,IAAIJ,EAAG,MAGpBD,EAAIC,EAAG,UAESA,EAAK,CAAC,IAAD,GACjB,UAAIA,EAAIC,UAAR,aAAI,EAAQI,OACZV,EAASS,IAAIJ,EAAIC,GAAGI,MAGhBL,EAAIC,GAAGK,SACTP,EAAIC,EAAIC,GAAGK,WAQXvB,EAAkB,SAACG,GACvBA,EAAEqB,iBACFd,GAAQ,GACR,IAAIe,EAAOtB,EAAEuB,aAAaC,MAAM,GAChC,GAAkB,qBAAdF,EAAKG,KAGP,OAFA/B,EAAc,mLACda,GAAQ,GAGV,GAAoC,IAAhCP,EAAEuB,aAAaC,MAAME,OAAc,CACrC,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,WAAWP,GAClBK,EAAOG,OAAS,WACZ,IAAIC,EAASJ,EAAOI,OAChBC,EAAMC,KAAKC,MAAMH,GAIrB,QAHYI,IAARH,GACFnB,EAAImB,GAEgB,IAAlBvB,EAAS2B,KAGT,OAFA1C,EAAc,yIACda,GAAQ,GAGZI,ECzDC,CACHc,KAAM,OACNY,QDuDoB,CAACC,KAAK7B,EAAUa,KAAMA,EAAKiB,QAC7ChC,GAAQ,GACRC,EAAMjB,cAAa,IAEvBoC,EAAOa,QAAU,WACd9C,EAAciC,EAAOI,cAIxBrC,EAAc,8KACda,GAAQ,IAKZ,OACE,qBAAKL,UAAU,gBAAf,SACGI,EAAS,2CAAoB,cAAC,EAAD,CAC5BT,gBAAiB,SAACG,GAAD,OAAKH,EAAgBG,IACtCJ,gBAAiB,SAACI,GAAD,OA7CC,SAACA,GACvBA,EAAEqB,iBA4CwBzB,CAAgBI,SE3D/ByC,MAbf,YAAyD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,WAKvB,OACE,sBAAKzC,UAAU,WAAf,UACE,4BAAIwC,IACL,mBAAGE,KAAK,IAAIC,QAAS,SAAC7C,GAAD,OAPE,SAACA,EAA4B0C,GACrD1C,EAAEqB,iBACFsB,EAAWD,GAKwCI,CAAkB9C,EAAG0C,IAAvE,wBCSUK,MAff,YAAuE,IAAlDC,EAAiD,EAAjDA,MAAOL,EAA0C,EAA1CA,WAAYM,EAA8B,EAA9BA,QAChCX,EAA0B,GAIhC,OAHAU,EAAME,SAAQ,SAACR,EAAMS,GACnBb,EAAKc,KAAK,cAAC,EAAD,CAAoBT,WAAY,SAACD,GAAD,OAAQC,EAAWD,IAAOA,KAAMA,GAAjDS,OAGzB,qCACCF,EAAU,6BAAKA,IAAgB,GAChC,qBAAK/C,UAAU,aAAf,SACEoC,QCuBSe,MAhCf,WACE,IAAM1C,EAAWC,cAEjB,EADc3B,GAAiB,SAAAqE,GAAK,OAAIA,KACHhC,KAA7BiC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAClB,EAA4BnD,mBAAS,IAArC,mBAAOP,EAAP,KAAe2D,EAAf,KACMjD,EAAQJ,qBAAWjB,GAClBM,EAASW,qBAAWZ,GAApBC,MAEDiE,EAAW,SAAC1D,GAChBA,EAAEqB,iBACFoC,EAAU,UACVjD,EAAMjB,cAAa,IAOrB,OACI,sBAAKW,UAAS,MACdH,WAAY,SAACC,GAAD,OAAK0D,EAAS1D,IAC1B2D,YAAa,SAAC3D,GAAD,OAAK0D,EAAS1D,IAC3BC,OAAQ,SAACD,GAAD,OATM,SAACA,GACjBA,EAAEqB,iBACFoC,EAAU,IACVjD,EAAMjB,cAAa,GAMJqE,CAAU5D,IAHvB,UAKGP,EAAQ,qBAAKS,UAAU,QAAf,SAAwBT,IAAe,GAC/C8D,EAASnB,KAAO,EAAI,cAAC,EAAD,CAAYa,QAASO,EAAUb,WAAY,SAACD,GAAD,OAAQ/B,EH1B7D,SAAC+B,GAChB,MAAO,CACHjB,KAAM,cACNY,QAASK,GGuBwEC,CAAWD,KAAQM,MAAOO,IAAc,GACzH,qBAAKrD,UAAWJ,IACdU,EAAMlB,WAA+B,IAAlBiE,EAASnB,KAAc,cAAC,EAAD,IAAoB,O,sBCxBlEyB,EAAsC,CACxCN,SAAU,IAAI7C,IACd8C,SAAU,IA2BCM,EAHKC,YAAgB,CAChCzC,KAvBY,WAAmG,IAAlGgC,EAAiG,uDAAlEO,EAAcG,EAAoD,uCAC9G,OAAQA,EAAQvC,MACZ,IAAK,OACD,OAAO,2BACAoC,GADP,IAEIN,SAAU,IAAI7C,IAAI,YAAIsD,EAAQ3B,QAAQC,MAAM2B,QAC5CT,SAAUQ,EAAQ3B,QAAQf,OAGlC,IAAK,cACD,IAAMgB,EAAO,IAAI5B,IAAI4C,EAAMC,UAE3B,OADAjB,EAAK4B,OAAOF,EAAQ3B,SACb,2BACAiB,GADP,IAEIC,SAAU,IAAI7C,IAAI4B,KAG1B,QACI,OAAOgB,MC7BJa,EADDC,YAAYN,GCKpBO,EAAO,WACX,MAAkChE,oBAAkB,GAApD,mBAAOf,EAAP,KAAkBC,EAAlB,KACA,EAA0Bc,mBAAiB,IAA3C,mBAAOZ,EAAP,KAAc6E,EAAd,KAMA,OACF,cAAC,IAAMC,WAAP,UACI,cAAC,EAAWC,SAAZ,CAAqBhE,MAAO,CAAClB,YAAWC,gBAAxC,SACE,cAACC,EAAYgF,SAAb,CAAsBhE,MAAO,CAACf,QAAOC,cARnB,SAAC+E,GACrBH,EAASG,GACTC,YAAW,kBAAIJ,EAAS,MAAK,OAM3B,SACF,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,aAONQ,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.fc0fc45a.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/reducer\";\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import React from 'react';\ninterface GlobalContextInterface {\n    dragField: boolean,\n    setDragField: (c:boolean)=>void,\n}\ninterface ErrorStatusInterface {\n    error: string,\n    showHideError: (c:string)=>void,\n}\nconst DragStatus = React.createContext<GlobalContextInterface>({\n    dragField: false,\n    setDragField: ()=>{}\n});\nconst ErrorStatus = React.createContext<ErrorStatusInterface>({\n    error: '',\n    showHideError: ()=> {}\n})\nexport default DragStatus;\nexport {\n    ErrorStatus,\n}","import React from 'react';\ninterface DragFieldInterface {\n  dragOverHandler: (e:React.DragEvent<HTMLDivElement>) => void,\n  dragDropHandler: (e:React.DragEvent<HTMLDivElement>) => void,\n  effect?: string,\n\n}\nfunction DragField({dragOverHandler, dragDropHandler, effect=''}:DragFieldInterface) {\n  return (\n    <div\n      onDragOver={(e:React.DragEvent<HTMLDivElement>) => dragOverHandler(e)}\n      onDrop={(e:React.DragEvent<HTMLDivElement>) => dragDropHandler(e)}\n      className={`dragField ${effect}` }\n      >\n      <p>DROP HERE</p>\n    </div>\n  );\n}\n\nexport default DragField;\n","import React, { useContext, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loadData } from '../redux/action';\nimport DragStatus, { ErrorStatus } from '../redux/context';\nimport DragField from './dragField';\n\nfunction JsonDragReader() {\n  const { showHideError} = useContext(ErrorStatus);\n  const [loader, setLoad ] = useState<boolean>(false)\n  const value = useContext(DragStatus);\n  let userList = new Set<string>();\n  const dispatch = useDispatch();\n  const dfs = (arr: Array<object> | Object) => {\n    if (arr) {\n    if (!Array.isArray(arr)) {\n      if ('user' in arr) {\n      userList.add(arr['user']);\n    }\n    \n  dfs(arr['replies']);\n    }\n    for (let i in arr) {\n      if (arr[i]?.user) {\n      userList.add(arr[i].user);\n    }\n\n      if (arr[i].replies) {\n        dfs(arr[i].replies);\n      }\n    }\n  }\n  }\n  const dragOverHandler = (e:React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n  }\n  const dragDropHandler = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setLoad(true);\n    let file = e.dataTransfer.files[0];\n    if (file.type !== 'application/json') {\n      showHideError('Необходимо перенести один JSON файл');\n      setLoad(false);\n      return\n    }\n    if (e.dataTransfer.files.length === 1) {\n      let reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = () => {\n          let result = reader.result as string;\n          let jsn = JSON.parse(result);\n          if (jsn !== undefined) {\n            dfs(jsn);\n        }\n          if (userList.size === 0) {\n              showHideError('Пользователи не найдены');\n              setLoad(false);\n              return;\n          }\n          dispatch(loadData({list:userList, file: file.name}));\n          setLoad(false);\n          value.setDragField(false);\n      }\n      reader.onerror = () => {\n         showHideError(reader.result as string);\n      }\n    }\n    else {\n      showHideError('Необходимо перенести один JSON файл');\n      setLoad(false);\n\n    }\n  }\n  \n  return (\n    <div className='json-drag-app'>\n      {loader ? <p>...loading</p> : <DragField \n        dragDropHandler={(e)=>dragDropHandler(e)} \n        dragOverHandler={(e)=>dragOverHandler(e)}\n        />}\n        \n      </div>\n  );\n}\n\nexport default JsonDragReader;\n","const loadData = (data:Array<object> | object) => {\n    return {\n        type: 'LOAD',\n        payload: data,\n    }\n}\nconst deleteItem = (item: string) => {\n    return {\n        type: 'DELETE_ITEM',\n        payload: item,\n    }\n}\nexport {\n    loadData,\n    deleteItem,\n}","import React, { MouseEvent } from 'react';\ninterface ListItemInterface {\n  item: string,\n  deleteItem: (item:string)=>void,\n}\nfunction ListItem({item, deleteItem}:ListItemInterface) {\n  const deleteItemHandler = (e: MouseEvent<HTMLElement>, item:string) => {\n    e.preventDefault(); \n    deleteItem(item);\n  }\n  return (\n    <div className='listItem'>\n      <p>{item}</p>\n     <a href=\"/\" onClick={(e:MouseEvent<HTMLElement>)=>deleteItemHandler(e, item)}>✘</a>\n    </div>\n  );\n}\n\nexport default ListItem;\n","import React from 'react';\nimport ListItem from './listItem';\ninterface UniqueListInterface {\n  items: Set<string>,\n  deleteItem:(item:string)=>void,\n  caption?:string,\n}\nfunction UniqueList({items, deleteItem, caption}:UniqueListInterface) {\n  const list:Array<JSX.Element> = []\n  items.forEach((item, key)=>{\n    list.push(<ListItem key={key} deleteItem={(item)=>deleteItem(item)} item={item} />);\n  });\n  return (\n    <>\n    {caption ? <h2>{caption}</h2> : ''} \n    <div className='uniqueList'>\n     {list}\n    </div>\n    </>\n  );\n}\n\nexport default UniqueList;\n","import React, { useContext, useState } from 'react';\nimport { useTypedSelector } from './hooks/useTypedSelector';\nimport JsonDragReader from './components/jsonDragReader';\nimport UniqueList from './components/uniqueList';\nimport { useDispatch } from 'react-redux';\nimport { deleteItem } from './redux/action';\nimport DragStatus, { ErrorStatus } from './redux/context';\nfunction App() {\n  const dispatch = useDispatch();\n  const state = useTypedSelector(state => state);\n  const { nameList, fileName } = state.file;\n  const [effect, setEffect] = useState('');\n  const value = useContext(DragStatus);\n  const {error} = useContext(ErrorStatus);\n  // Для тени на главной\n  const shadowOn = (e:React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setEffect('shadow')\n    value.setDragField(true);\n  }\n  const shadowOff = (e:React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setEffect('');\n    value.setDragField(false);\n  } \n  return (\n      <div className={`app`}\n      onDragOver={(e)=>shadowOn(e)}\n      onDragStart={(e)=>shadowOn(e)}\n      onDrop={(e)=>shadowOff(e)}\n      >\n        {error ? <div className=\"error\">{error}</div> : ''}\n        {nameList.size > 0 ? <UniqueList caption={fileName} deleteItem={(item)=>dispatch(deleteItem(item))} items={nameList}/> : ''}\n        <div className={effect}></div>\n        {(value.dragField || nameList.size === 0) ? <JsonDragReader/> : ''}\n      </div>\n    );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\"\n\nexport interface InitialStateInterface {\n    nameList: Set<string>,\n    fileName: string,\n}\ninterface ActionInterface {\n    payload?: any,\n    type: string\n}\nconst initialState: InitialStateInterface = {\n    nameList: new Set<string>(),\n    fileName: '',\n}\nconst reducer = (state: InitialStateInterface = initialState, actions: ActionInterface): InitialStateInterface => {\n    switch (actions.type) {\n        case \"LOAD\": {\n            return {\n                ...initialState,\n                nameList: new Set([...actions.payload.list].sort()),\n                fileName: actions.payload.file,\n            }\n        }\n        case \"DELETE_ITEM\": {\n            const list = new Set(state.nameList)\n            list.delete(actions.payload);\n            return {\n                ...state,\n                nameList: new Set(list)\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\nconst rootReducer = combineReducers({\n    file: reducer\n})\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>","import {createStore} from 'redux';\nimport rootReducer from './reducer';\nconst store = createStore(rootReducer);\nexport default store;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport DragStatus, {ErrorStatus} from './redux/context';\nconst Main = () => {\n  const [dragField, setDragField] = useState<boolean>(true);\n  const [error, setError] = useState<string>('');\n  const showHideError = (err:any) => {\n    setError(err);\n    setTimeout(()=>setError(''), 2000)\n  }\n\n  return (\n<React.StrictMode>\n    <DragStatus.Provider value={{dragField, setDragField}}>\n      <ErrorStatus.Provider value={{error, showHideError}}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </ErrorStatus.Provider>\n    </DragStatus.Provider>\n  </React.StrictMode>\n  )\n}\nReactDOM.render(\n  <Main/>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}